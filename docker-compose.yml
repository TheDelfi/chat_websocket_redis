version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: 'redis_chat'
    ports:
      - '6379:6379'
    networks:
      - my-app
    restart: unless-stopped

  redis-insight:
    image: redis/redisinsight:latest
    container_name: 'redisinsight_chat'
    ports:
      - '5540:5540'
    networks:
      - my-app
    volumes:
      - 'redisDATA_volume_for_websocket_chat:/data'
    depends_on:
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-app
    restart: unless-stopped

  chat_websocket:
    image: my-app
    container_name: my-app
    ports:
      - '3000:3000'
    networks:
      - my-app
    depends_on:
      - redis
      - postgres
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    restart: unless-stopped

networks:
  my-app:
    driver: bridge

volumes:
  redisDATA_volume_for_websocket_chat:
  postgres_data: